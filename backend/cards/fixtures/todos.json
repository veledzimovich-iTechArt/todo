[{"model": "cards.todo", "pk": 1, "fields": {"owner": 1, "title": "Tutorial (React)", "description": "www.digitalocean.com/community/tutorials/build-a-to-do-application-using-django-and-react#prerequisites", "completed": true, "tags": [1, 4, 2, 3]}}, {"model": "cards.todo", "pk": 2, "fields": {"owner": 1, "title": "Make Description fields multiline in React", "description": "Change type to type=\"textarea\"", "completed": true, "tags": [2]}}, {"model": "cards.todo", "pk": 3, "fields": {"owner": 1, "title": "Add/Remove Tags in React", "description": "Add handlers in modal to create, apply and remove tags", "completed": true, "tags": [2]}}, {"model": "cards.todo", "pk": 4, "fields": {"owner": 1, "title": "Add Tags in Django", "description": "Add endpoint for Tag model", "completed": true, "tags": [1]}}, {"model": "cards.todo", "pk": 5, "fields": {"owner": 1, "title": "Filter by Tag Django", "description": "Add query filter by existing tags in TodoView", "completed": true, "tags": [1, 5, 4]}}, {"model": "cards.todo", "pk": 6, "fields": {"owner": 1, "title": "Filter By Tags in Django", "description": "Add query param selection for TagView", "completed": true, "tags": [1]}}, {"model": "cards.todo", "pk": 9, "fields": {"owner": 1, "title": "Filter by Tags in Main Page React", "description": "Add filter in selectTag in App.js", "completed": true, "tags": [2, 3]}}, {"model": "cards.todo", "pk": 10, "fields": {"owner": 1, "title": "Format Tags in React", "description": "Add horizontal  and vertical margin with className", "completed": true, "tags": [2]}}, {"model": "cards.todo", "pk": 11, "fields": {"owner": 1, "title": "Add User model in Dajngo", "description": "Add users and customise default model", "completed": true, "tags": [1]}}, {"model": "cards.todo", "pk": 12, "fields": {"owner": 1, "title": "Add Modal To Delete Tags", "description": "Add modal in main page", "completed": true, "tags": [1, 2]}}, {"model": "cards.todo", "pk": 13, "fields": {"owner": 1, "title": "Set DjangoAdmin for Tags", "description": "Add get_tags readonly and get_todos in DjangoAdmin", "completed": true, "tags": [1]}}, {"model": "cards.todo", "pk": 14, "fields": {"owner": 1, "title": "Create only Non exist Tags React", "description": "Create tag under hood", "completed": true, "tags": [2]}}, {"model": "cards.todo", "pk": 15, "fields": {"owner": 1, "title": "Add Count Tag Column", "description": "Add get_count in Django Admin", "completed": true, "tags": [1]}}, {"model": "cards.todo", "pk": 16, "fields": {"owner": 1, "title": "Optimize API query(Django)", "description": "Check all endpoints with django-debug-toolbar\nReduce number of queries from 100 to 4 for GET todos\nReduce number of queries from 8 to 6 for POST todos", "completed": true, "tags": [1, 5]}}, {"model": "cards.todo", "pk": 17, "fields": {"owner": 1, "title": "Optimize Admin Query in Django", "description": "Add prefetch tags in admin.py", "completed": true, "tags": [1]}}, {"model": "cards.todo", "pk": 18, "fields": {"owner": 1, "title": "Add Notification in Django", "description": "Set Redis and Celery to send notifications about recently completed tasks", "completed": false, "tags": [1, 4]}}, {"model": "cards.todo", "pk": 19, "fields": {"owner": 1, "title": "Add Tag autocomplete", "description": "Add separate component with autocompletion from all tags.", "completed": true, "tags": [2]}}, {"model": "cards.todo", "pk": 21, "fields": {"owner": 1, "title": "Safe Cards Delete", "description": "Add move delete to the edit?", "completed": true, "tags": [2, 3]}}, {"model": "cards.todo", "pk": 22, "fields": {"owner": 1, "title": "Add custom CSS", "description": "Add global styles", "completed": false, "tags": [2]}}, {"model": "cards.todo", "pk": 23, "fields": {"owner": 1, "title": "Add case-insensitive for (Django)", "description": "Made migration and add citext extension", "completed": true, "tags": [1, 5]}}, {"model": "cards.todo", "pk": 24, "fields": {"owner": 1, "title": "Add tests", "description": "Add tests for models", "completed": false, "tags": [1]}}, {"model": "cards.todo", "pk": 25, "fields": {"owner": 1, "title": "Move Tags in separate component", "description": "Create separate component for Render Tags", "completed": true, "tags": [2]}}, {"model": "cards.todo", "pk": 26, "fields": {"owner": 1, "title": "Show all Tags as buttons in main page", "description": "Get tags and show them in main page", "completed": true, "tags": []}}, {"model": "cards.todo", "pk": 27, "fields": {"owner": 1, "title": "Select Tags with arrows in React", "description": "Add handler for keys UP and DOWN", "completed": true, "tags": [2]}}, {"model": "cards.todo", "pk": 28, "fields": {"owner": 1, "title": "Highlight Tags in React", "description": "Properly highlight Tags when user select them with UP or DOWN arrow", "completed": true, "tags": [2]}}, {"model": "cards.todo", "pk": 29, "fields": {"owner": 1, "title": "Add Control Version", "description": "Add app in GitHub or DockerHub. Provide Docker file.", "completed": false, "tags": [1, 5, 2]}}, {"model": "cards.todo", "pk": 30, "fields": {"owner": 1, "title": "Move deleteTags to component", "description": "Found a way to move all tags to Autocomplete component", "completed": true, "tags": [2]}}, {"model": "cards.todo", "pk": 31, "fields": {"owner": 1, "title": "Fix warning with \"key\" prop", "description": "To fix \"Each child in a list should have a unique \"key\" prop\"\nAdd unique key for each element in DropdownMenu", "completed": true, "tags": [2]}}, {"model": "cards.todo", "pk": 33, "fields": {"owner": 1, "title": "Show tags badges in tab list", "description": "Add read-only badges in tab list for every card", "completed": true, "tags": [2, 3]}}, {"model": "cards.todo", "pk": 34, "fields": {"owner": 1, "title": "Error with two cards after query", "description": "Remove same values from response. Distinct?", "completed": true, "tags": [1, 2]}}, {"model": "cards.todo", "pk": 35, "fields": {"owner": 1, "title": "Better highlight for tag buttons in main page", "description": "Set other color or remove selection when hover", "completed": true, "tags": [2]}}, {"model": "cards.todo", "pk": 36, "fields": {"owner": 1, "title": "Better handle state when add Tags", "description": "Loose data in Title and Description when select tags", "completed": true, "tags": [2]}}, {"model": "cards.todo", "pk": 37, "fields": {"owner": 1, "title": "Improve modal management", "description": "Setup system to manage modals with openedModalType. Remove booleans from state", "completed": true, "tags": [2]}}, {"model": "cards.todo", "pk": 38, "fields": {"owner": 1, "title": "Move FE \"proxy\" from package.json", "description": "1. Move FE \"proxy\" from package.json to the env \n2. Set src/setupProxy.js\n3. Check docker-compose.yaml", "completed": true, "tags": [2]}}, {"model": "cards.todo", "pk": 39, "fields": {"owner": 1, "title": "Add BE and FE .env files", "description": "Remove private data from settings", "completed": true, "tags": [1]}}, {"model": "cards.todo", "pk": 40, "fields": {"owner": 1, "title": "Disable save button", "description": "Validate Title and Description", "completed": true, "tags": [2, 3]}}, {"model": "cards.todo", "pk": 44, "fields": {"owner": 1, "title": "Open modal for Delete confirmation", "description": "Set modal inside other modal and use card title to confirm delete", "completed": false, "tags": [2]}}, {"model": "cards.todo", "pk": 45, "fields": {"owner": 1, "title": "Show notification bages with username", "description": "Show after login notifications for the user", "completed": true, "tags": [2]}}, {"model": "cards.todo", "pk": 47, "fields": {"owner": 1, "title": "Add Sign In and Sign UP modal", "description": "Add links to Sign In and Sign Up modal", "completed": true, "tags": [1, 2]}}, {"model": "cards.todo", "pk": 48, "fields": {"owner": 1, "title": "Add X-CSRFToken and session auth", "description": "Add permissions and check owner in requests. Use X-CSRFToken in React", "completed": true, "tags": [1, 2]}}, {"model": "cards.todo", "pk": 52, "fields": {"owner": 1, "title": "Add owner field to the Card model", "description": "Create/Update cards with owner-user from request.\nUse X-CSRFToken in Postman to update models.", "completed": true, "tags": [1]}}, {"model": "cards.todo", "pk": 54, "fields": {"owner": 1, "title": "Add Login message with user name", "description": "1. Hide Sign In and Sign Up and show user name\n2. Add Sign Out button.", "completed": true, "tags": [1, 2]}}, {"model": "cards.todo", "pk": 55, "fields": {"owner": 1, "title": "Filter cards by logged user", "description": "Filter cards use user from request", "completed": true, "tags": [1]}}, {"model": "cards.todo", "pk": 57, "fields": {"owner": 1, "title": "Refactor login modal", "description": "1. Remove unused args.\n2. Email field and check email only for sing up.\n3. Hide password.", "completed": true, "tags": [2]}}, {"model": "cards.todo", "pk": 58, "fields": {"owner": 1, "title": "Catch errors when user exist", "description": "Find out how to show message about existing users.", "completed": true, "tags": [1, 2]}}, {"model": "cards.todo", "pk": 59, "fields": {"owner": 1, "title": "Check logout when cookie expired", "description": "Use logout from BE when 'loggedUserName' is not presented in cookies", "completed": true, "tags": [2]}}, {"model": "cards.todo", "pk": 60, "fields": {"owner": 1, "title": "Check errors with wrong credentials", "description": "Catch error or show notification when wrong credentials. Show modified sign up again.", "completed": true, "tags": [1, 2]}}, {"model": "cards.todo", "pk": 61, "fields": {"owner": 1, "title": "Add password validation", "description": "Add password validation using django password_validation", "completed": true, "tags": [1]}}, {"model": "cards.todo", "pk": 62, "fields": {"owner": 1, "title": "Problem with 301 Redirect", "description": "Investigate why we have redirect\nset in settings.py APPEND_SLASH = False \nand check all urls in FE", "completed": true, "tags": [1, 2]}}, {"model": "cards.todo", "pk": 77, "fields": {"owner": 1, "title": "Add fixtures", "description": "Update docker-compose.yaml", "completed": true, "tags": [2]}}, {"model": "cards.todo", "pk": 78, "fields": {"owner": 1, "title": "Setup docker-compose.yaml", "description": "1. Exclude .env files\n2. Setup fixtures", "completed": true, "tags": [1, 2]}}]