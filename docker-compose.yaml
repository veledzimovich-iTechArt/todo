version: "3"

services:
  db:
    container_name: todo_db
    image: postgres:latest
    env_file:
      - ./backend/.env
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: todo
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - "15432:5432"
    healthcheck:
        test: ["CMD", "pg_isready", "-U", "postgres"]
        interval: 5s
        timeout: 5s
        retries: 5

  redis:
    container_name: todo_redis
    image: redis:latest
    ports:
      - "16379:6379"
    healthcheck:
        test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
        interval: 5s
        timeout: 5s
        retries: 5

  api:
    container_name: todo_api
    build: ./backend
    env_file:
      - ./backend/.env
    environment:
      DEBUG: ''
      DATABASE_HOST: db
      REDIS_HOST: redis
    ports:
      - "8000:8000"
    volumes:
      - ./backend/core:/backend/core
      - ./backend/cards:/backend/cards
      - ./backend/Main:/backend/Main
      - ./backend/users:/backend/users
      - ./backend/manage.py:/backend/manage.py
    command: >
      bash -c "python manage.py migrate &&
              python manage.py load_all_data &&
              python manage.py runserver 0.0.0.0:8000"
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    links:
      - db
      - redis

  celery:
    container_name: todo_celery
    restart: always
    build:
      context: ./backend
    command: celery -A Main worker -l INFO --concurrency=2 -B -s celerybeat-schedule
    env_file:
      - ./backend/.env
    environment:
      DATABASE_HOST: db
      REDIS_HOST: redis
    depends_on:
      - db
      - redis
      - api

  web:
    container_name: todo_web
    build: ./frontend
    environment:
      # set proxy for docker
      REACT_APP_PROXY: http://api:8000
    ports:
      - "3000:3000"
    volumes:
      # - ./frontend:/frontend
      - ./frontend/public:/frontend/public
      - ./frontend/src:/frontend/src
      - ./frontend/package-lock.json:/frontend/package-lock.json
      - ./frontend/package.json:/frontend/package.json
    depends_on:
      - db
      - redis
      - api
      - celery

